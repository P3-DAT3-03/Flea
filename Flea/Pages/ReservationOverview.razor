@using Flea.Models
@using Microsoft.EntityFrameworkCore

@page "/ReservationOverview"

@* <button class="button button--outline create-button" @onclick="NewReservation">Opret ny booking</button> *@

<div>
    <div class="view-head">
        <input class="search-input" type="search" value="" placeholder="Søg efter booking" @oninput="Searchbar">
        <Modal ButtonName="Opret ny booking" @ref="_child">
            <ReservationForm Reservation="_temp" OnValidSubmit="NewReservation" Modal="_child"></ReservationForm>
        </Modal>
    </div>

    @foreach (var value in _shownReservation)
    {
        <div>
            <ReservationUserListItem Reservation="value"
                                     OnDelete="@DeleteReservationInformation"
                                     OnEdit="@EditReservationInformation"/>
        </div>
    }
</div>

@code
{
    private string titleHeader = "Bookinger til den 28. februar, 2021";

    private void UpdateTitleHeader() { MainLayout.HeaderTitle = titleHeader; }

    private Modal _child;
    private Reservation _temp = new (1, 1, false, "",new Models.Customer("", ""));
    private string _search = "";
    
    
    // Dummy data
    private static Models.Customer _dummyCustomer = new Models.Customer("Christoffer Trebbien Jønsson", "12345678");
    
    private List<Reservation> _reservations = new()
    {
        new Reservation(1, 3, true, "", _dummyCustomer){Id = 1},
        new Reservation(1, 3, true, "", _dummyCustomer){Id = 2},
        new Reservation(1, 3, true, "", _dummyCustomer){Id = 3}
    };

    private IEnumerable<Reservation> _shownReservation;

    // Delete the reservation
    public void DeleteReservationInformation(string name)
    {
        var nameFound = _reservations.Find(r => r.ReservationOwner.Name == name);
        
        if (nameFound != null)
        {
            _reservations.Remove(nameFound);
            _shownReservation = _shownReservation.Where(reservation => reservation != nameFound);
        }
    }
    
    // Edits the reservation
    public void EditReservationInformation(EditContext editContext)
    {
        
    }
    
    // Makes a new reservation
    public void NewReservation()
    {
        
    }

    // The searchbar function, it works WOW
    public void Searchbar(ChangeEventArgs e)
    {
        // If you search with nothing in the bar
        var input = e.Value?.ToString()?.ToLower()?? "";
        if (input == "")
        {
            _shownReservation = _reservations;
        }
        else if (Char.IsDigit(input[0]))
        {// Finds by Booths
            _shownReservation = from c
                in _reservations
                where c.TableCount.ToString().Contains(input)
                select c;
        }
        else if (input.Contains("betalt"))
        {
            _shownReservation = from c
                in _reservations
                where c.Paid != input.Contains("ej")
                select c;
        }
        else
        {// Finds by name
            _shownReservation = from c
                in _reservations
                where c.ReservationOwner.Name.ToLower().Contains(input)
                select c;
        }
    }
    
    protected override void OnInitialized()
    {
        UpdateTitleHeader();
        _shownReservation = _reservations;
    }
}