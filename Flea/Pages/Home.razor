@using Event = Flea.Models.Event;

@page "/"
@page "/Home"


<div>
    <div class="view-head">
        <input class="search-input" @bind-value="_searchTerm" @bind-value:event="oninput" placeholder="Søg efter loppemarked..."/>
        <Modal ButtonName="Tilføj nyt loppemarked" @ref="_child">
            <div>
                <h5>Hvor mange loppemarkeder ønsker I at oprette?</h5>
                <label>Antal loppemarkeder: </label>
                <input type="text" @bind-value="_tempEvents.EventAmount">
            </div>
            @if (_tempEvents.EventAmount > 0)
            {
                _tempEvents.Events.Clear();
                for (int i = 0; i < _tempEvents.EventAmount; i++)
                {
                    _tempEvents.Events.Add(new Event("", DateTime.Today));
                }
                _tempEvents.EventAmount = 1;
            }
            <CreateEventForm EventList="_tempEvents" OnValidSubmit="NewEvent" Modal="_child"></CreateEventForm>
        </Modal>
    </div>

    <!-- Creates event items for each event that matches the user's search term -->
    @if (DummyEventDB.Count == 0)
    {
        <h2>Der er ingen loppemarkeder at vise...</h2>
    }
    else if (FilteredEvents.Count == 0)
    {
        <h2>Der er ingen loppemarkeder, som matcher søgekriterierne...</h2>
    }
    else
    {
        foreach (Event e in FilteredEvents)
        {
            <div>
                <EventListItem Event="@e"></EventListItem>
            </div>
        }
    }
</div>

@code {
    public class EventList
    {
        public List<Event> Events { get; set; } = new List<Event>();
        public int EventAmount { get; set; } = 1;
    }

    public EventList _tempEvents = new();
    Modal _child;
    private string _searchTerm { get; set; } = "";
    
    // Placeholder event database. 
    private List<Event> DummyEventDB = new();

    // List of events from database that match the search term.
    List<Event> FilteredEvents => 
        DummyEventDB.Where(i => i.DateTime.ToString().ToLower().Contains(_searchTerm.ToLower())).ToList();

    public void NewEvent()
    {
        DummyEventDB.AddRange(_tempEvents.Events);
        DummyEventDB.Sort((x, y) => x.DateTime.CompareTo(y.DateTime));
        _child.ModalCancel();
    }
}