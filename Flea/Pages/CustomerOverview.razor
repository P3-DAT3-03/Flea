@page "/CustomerOverview"
@using Customer = Flea.Models.Customer
<div>
    <div class="view-head">
        <input class="search-input" type="search" value="" placeholder="SÃ¸g efter loppe" @oninput="Searchbar">
        <Modal ButtonName="Opret ny loppe" @ref="_child">
            <CustomerForm Customer="_temp" OnValidSubmit="NewCustomer" Modal="_child"></CustomerForm>
        </Modal>
    </div>
    @foreach (var customer in ShownCustomers)
    {
        <div>
            <CustomerUserListItem Customer="@customer" OnDelete="@DeleteCustomerInformation">
            </CustomerUserListItem>
        </div>
    }
</div>


@code
{
    private Modal _child;
    private Customer _temp = new("", "");
    private string _search = "";

    // Dummy data ---

    private List<Customer> Customers = new()
    {
        new Customer("Sebastian Aaholm", "24823423") {Id = 1},
        new Customer("Jens Jensen", "4541341") {Id = 2},
        new Customer("Hans Nielsen", "8888888") {Id = 3}
    };

    // ---

    private IEnumerable<Customer> ShownCustomers;

    // Delete the customer
    public void DeleteCustomerInformation(int id)
    {
        Customers = Customers.Where(c => c.Id != id).ToList();
        ShownCustomers = ShownCustomers.Where(c => c.Id != id);
        StateHasChanged();
    }

    // Makes a new Customer
    public void NewCustomer(EditContext editContext)
    {
        
    }

    // Searchbar function
    public void Searchbar(ChangeEventArgs e)
    {
    // If no input whole list is shown
        var input = e.Value?.ToString() ?? "";
        if (input == "")
        {
            ShownCustomers = Customers;
        }
        else if (Char.IsDigit(input[0]))
        {
    // Finds by phonenumbers

            var results = from c
                in Customers
                where c.PhoneNumber.Contains(input)
                select c;
            ShownCustomers = results;
        }
        else
        {
    // Finds by name
            var results = from c
                in Customers
                where c.Name.ToLower().Contains(input.ToLower())
                select c;
            ShownCustomers = results;
        }
    }

    protected override void OnInitialized()
    {
        ShownCustomers = Customers;
    }
}