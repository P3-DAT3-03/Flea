@page "/Placing"
@using Flea.Models
<h1>Placing</h1>

@foreach (var cluster in Clusters)
{
    <Cluster Inner="@cluster" OnTableSelect="@TableSelected"></Cluster>
}
<style>
    .table {
        width: 50px;
        height: 50px;
    }
    .table-on {
        background-color: gray;
    }
    .table-off {
        background-color: white;
    }
</style>
@code {
    private List<Models.Cluster> Clusters { get; set; }
    
    public Models.Reservation? SelectedReservation { get; set; }

    private void TableSelected((int t,int c) id)
    {
        var (t, c) = id;
        if (SelectedReservation == null)
        {
            Console.WriteLine("No reservation has been selected");
            return;
        }
        if (c > Clusters.Count - 1)
        {
            Console.WriteLine("The selected cluster does not exist!");
            return;
        }
        var cluster = Clusters[c];
        if (t > cluster.Tables.Count - 1)
        {
            Console.WriteLine("The selected table does not exists");
            return;
        }

        for (var i = 0; i < SelectedReservation.TableCount; i++)
        {
            // Use assign reservation to table here!
            // We need a way to check if the cluster is in a line or circle formation
            // Since we do net want the line type to wrap around.
            var target = (t + i) % cluster.Tables.Count;
            if (cluster.Tables[target].Reservation == null) continue;
            Console.WriteLine("Could not reserve a continuous line of tables.");
            return;
        }
        for (var i = 0; i < SelectedReservation.TableCount; i++)
        {
            var target = (t + i) % cluster.Tables.Count;
            cluster.Tables[target].Reservation = SelectedReservation;
        }
        SelectedReservation = null;
    }
    
    protected override void OnInitialized()
    {
        SelectedReservation = new Reservation(1, 3, true, "");
        Clusters = new List<Models.Cluster> {new("A", 0)};
        var tables = new List<Models.Table>();
        for (var i = 0; i < 10; i++)
        {
            tables.Add(i == 2 ?
                new Models.Table {Id = i, Cluster = Clusters[0],Reservation = new Reservation(0, 1, true, "")} :
                new Models.Table {Id = i, Cluster = Clusters[0]});
        }
        
        Clusters[0].Tables = tables;
        Console.WriteLine(Clusters[0].Tables.Count);
    }

}
