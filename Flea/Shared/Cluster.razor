@using Flea.Models
<div class="cluster @Class">
    @for (var i = 0; i < Inner.Tables.Count; i++)
    {
        var tableClass = Inner.Type switch
        {
            Models.Cluster.ClusterType.Round => i switch
            {
                0 or 3 or 4 or 7 => "horizontal",
                5 or 6 => "bottom",
                _ => "vertical"
            },
            Models.Cluster.ClusterType.Horizontal => "horizontal",
            _ => "vertical"
        };
        <Table
            TableIndex="@i"
            ClusterIndex="@ClusterIndex"
            Inner="@Inner.Tables[i]"
            Class="@tableClass"
            OnTableSelect="@(async id => await OnTableSelect.InvokeAsync(id))">
        </Table>
    }
    @if (Inner.Type == Models.Cluster.ClusterType.Round)
    {
        <div class="cluster-tag">@Inner.Name</div>   
    }
</div>
@code {
    [Parameter]
    public string? Class { get; set; }
    
    [Parameter]
    public Models.Cluster Inner { get; set; }
    
    [Parameter]
    public EventCallback<(int,int)> OnTableSelect { get; set; }

    [Parameter]
    public int ClusterIndex { get; set; }

    protected override void OnInitialized()
    {
        Class ??= "";
    }
}