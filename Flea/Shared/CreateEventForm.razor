@using Event = Flea.Models.Event;
@using Microsoft.AspNetCore.Components
@using EventList = Flea.Pages.Home.EventList;
@using Flea.Utility

<EditForm Model="EventList" OnValidSubmit="OnValidSubmit">
    <div class="edit-form">
        @foreach (Event temp in EventList.Events)
        {
            <div class="edit-form">
                <div class="edit-form-div">
                    <label>Dato:</label>
                    <input type="date" @bind="temp.DateTime"/>
                </div>
            </div>
        }
        <div class="flex-end" style="gap: 12px">
            <button type="button" class="button outlined c-red" @onclick="Modal.Close">Annuller</button>
            <button type="submit" class="button c-blue">Tilføj loppemarked</button>
        </div>
    </div>
</EditForm>


@code {

    [Parameter, RequiredParameter]
    public EventList EventList { get; set; } = null!;

    [Parameter]
    public EventCallback<EditContext> OnValidSubmit { get; set; }

    [Parameter]
    public Modal Modal { get; set; } = null!;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        ParameterChecker.CheckParameters(this);
    }
}