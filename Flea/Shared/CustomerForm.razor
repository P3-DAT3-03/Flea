@using Flea.Models
@using Flea.Pages
@using Flea.Utility

<EditForm Model="Customer" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />
        
        <div class="customer-overview">
        @if (Customer.Id == 0)
        {
            <div>
                <div>Navn på loppe:</div>
                <InputText class="search-input search-input-fill" maxlength="64" placeholder="Eks. Hans Henriksen"
                           @bind-Value="Customer.Name"/>
            </div>
        }
        else
        {
            <div>
                <div>Loppe:</div>
                <InputText class="search-input search-no-icon" disabled=""
                           @bind-Value="Customer.Name"/>
            </div>
        }
        <div>
            <div>Kalde navn på loppe:</div>
            <InputText class="search-input search-no-icon" maxlength="64" placeholder="Eks. Børge"
                       @bind-Value="Customer.Nickname"/>
        </div>
        <div>
            <div>Telefon-nummer: </div>
            <InputText class="search-input search-no-icon" maxlength="8" onkeypress="return event.charCode >= 48 && event.charCode <= 57" placeholder="Eks. 12345678"
                       @bind-Value="Customer.PhoneNumber"></InputText>
        </div>
        <div id="display-inline">
            <button class="button red" type="button" @onclick="@Modal.ModalCancel">Cancel</button>
            <button type="submit" class="button blue">@(Customer.Id == 0 ? "Opret Loppe" : "Gem ændringer")</button>
        </div>
    </div>
</EditForm>

@code
{
    [Parameter, RequiredParameter]
    public Customer Customer { get; set; } = null!;
    
    [Parameter, RequiredParameter]
    public EventCallback<EditContext> OnValidSubmit { get; set; }

    [Parameter, RequiredParameter]
    public Modal Modal { get; set; } = null!;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        ParameterChecker.CheckParameters(this);
    }
    
}