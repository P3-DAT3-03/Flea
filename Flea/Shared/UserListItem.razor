
@using Customer = Flea.Models.Customer
<div class="customer-item">
    <div class="txt">ID: @Customer.Id.ToString().PadLeft(4, '0')</div>
    <div class="txt">Navn: @Customer.Name</div>
    <div class="txt">Nummer: @Customer.PhoneNumber</div>
    <button class="button button--outline del-button" @onclick="Delete">Slet</button>
    <Modal ButtonName="Rediger" ButtonClass="edit-button" @ref="child">
            <EditForm Model="Temp" OnValidSubmit="EditCustomerInformation">
                <div>
                    <label>Name: </label>
                    <InputText @bind-Value="Temp.Name"/>
                </div>
                <div>
                    <label>Telefonnummer: </label>
                    <InputText @bind-Value="Temp.PhoneNumber"></InputText>
                </div>
                <div>
                    <button type="submit" class="button button--outline create-button">Opret Loppe</button>
                </div>
            </EditForm>
        </Modal>
</div>

@code {
    Modal child;
    private Customer Temp = new("", "");
    // Edits the customer
    public void EditCustomerInformation(EditContext editContext)
    {
        var temp = (Customer) editContext.Model;
        Customer.Name = temp.Name;
        Customer.PhoneNumber = temp.PhoneNumber;
        child.ModalCancel();
    }

    [Parameter]
    public Customer Customer { get; set; }

    [Parameter]
    public EventCallback<int> OnDelete { get; set; }

    [Parameter]
    public EventCallback<int> OnEdit { get; set; }

    public async Task Delete()
    {
        await OnDelete.InvokeAsync(Customer.Id);
    }

    public async Task Edit()
    {
        await OnEdit.InvokeAsync(Customer.Id);
    }

}