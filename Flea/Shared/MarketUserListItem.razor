@using Flea.Models
@using Reservation = Flea.Models.Reservation

<a href="/Event/@EventId/Checkin/@Reservation.Id" class="reservation">
    <div class="reservation__name">@Reservation.ReservationOwner.Name</div>
    <div class="reservation__tables">@Reservation.TableCount Stande</div>
    @{
        var status = Reservation.PaymentStatus switch {
            PaymentStatus.NotPaid => ("c-red", "Ej betalt"),
            PaymentStatus.Paid => ("c-green", "Har betalt"),
            _ => ("c-blue", "Aftale")
            };
    }
    <div class="reservation__payment-status bg-primary @(status.Item1)">
        @(status.Item2)
    </div>
    <div class="reservation__arrived-status bg-primary @(Reservation.Arrived ? "c-green" : "c-red")">
            @(Reservation.Arrived ? "Arrived" : "Not Arrived")
        </div>
    <span class="reservation__table-names">Pladser:
        @foreach (var table in Reservation.Tables)
        {
            <span>@(" "+table.Cluster.Name+GetTableNumber(table))</span>
        }
    </span>
</a>

@code {
    private Modal _child = null!;
    private Reservation _temp = new(1, 1, PaymentStatus.NotPaid, "", new Customer("", ""), null!);
    private string _clusterName;

    [Parameter]
    public Reservation Reservation { get; set; } = null!;

    public int GetTableNumber(Table table)
    {
        if (table.Reservation == null) return -1;
        table.Cluster.Tables.Sort((a, b) => a.Id - b.Id);
        var index = table.Cluster.Tables.IndexOf(table);
        var offset = 0;
        if (table.Cluster.Type == ClusterType.Round)
        {
            offset = index switch {
                >= 4 => -3,
                < 4 => 5
            };
        }
        return index + offset;
    }

    [Parameter]
    public int EventId { get; set; }
}