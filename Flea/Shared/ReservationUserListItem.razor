@using Flea.Models
@using Reservation = Flea.Models.Reservation

<div class="reservation-li">
    <div class="txt">@Reservation.ReservationOwner.Name</div>
    <div class="txt">@Reservation.TableCount Stande</div>
    <div class="txt">@(Reservation.Paid ? "Betalt" : "Ej betalt")</div>
    <button class="button del-button button--outline" @onclick="Delete">Slet</button>
    <Modal ButtonName="Rediger" ButtonClass="edit-button" @ref="_child">
        <ReservationForm Reservation="_temp" OnValidSubmit="OnSubmit"></ReservationForm>
    </Modal>
</div>
@* <button class="button edit-button" @onclick="Edit">Rediger</button> *@

@code {
    private Modal _child;
    private Reservation _temp = new(1, 1, false, "",new Models.Customer("", ""));
    private Reservation _reservation;

    [Parameter]
    public Reservation Reservation
    {
        get => _reservation;
        set
        {
            _reservation = value;
            _temp = Reservation.Clone();
        }
    }

    [Parameter]
    public EventCallback<string> OnDelete { get; set; }
    
    [Parameter]
    public EventCallback<EditContext>OnEdit { get; set; }

    public async Task Delete()
    {
        await OnDelete.InvokeAsync(Reservation.ReservationOwner.Name);
    }

    public async Task OnSubmit(EditContext context)
    {
        _child.ModalCancel();

        Reservation.TableCount = _temp.TableCount;
        Reservation.Paid = _temp.Paid;
        Reservation.Comments = _temp.Comments;
        
        await OnEdit.InvokeAsync(context);
        
    }
}